apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'java'

version = "2.0-SNAPSHOT"
group = "net.minecraftforge" //not sure if we shoulkd publish under this name, but it's our fork so meh
archivesBaseName = "fernflower"

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

sourceSets {
    main.java.srcDirs = ['src']
    test.java.srcDirs = ['test']
}

repositories {
    mavenCentral()
   maven {
       name = "mc"
       url = "https://libraries.minecraft.net/"
   }

}

configurations {
    deployerJars
}

dependencies {
    testCompile "junit:junit:4.12"
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

  // MC test only
  testRuntime "oshi-project:oshi-core:1.1"
  testRuntime "net.java.dev.jna:jna:3.4.0"
  testRuntime "net.java.dev.jna:platform:3.4.0"
  testRuntime "com.ibm.icu:icu4j-core-mojang:51.2"
  testRuntime "net.sf.jopt-simple:jopt-simple:4.6"
  testRuntime "com.paulscode:codecjorbis:20101023"
  testRuntime "com.paulscode:codecwav:20101023"
  testRuntime "com.paulscode:libraryjavasound:20101123"
  testRuntime "com.paulscode:librarylwjglopenal:20100824"
  testRuntime "com.paulscode:soundsystem:20120107"
  testRuntime "io.netty:netty-all:4.0.23.Final"
  testRuntime "com.google.guava:guava:17.0"
  testRuntime "org.apache.commons:commons-lang3:3.3.2"
  testRuntime "commons-io:commons-io:2.4"
  testRuntime "commons-codec:commons-codec:1.9"
  testRuntime "net.java.jinput:jinput:2.0.5"
  testRuntime "net.java.jutils:jutils:1.0.0"
  testRuntime "com.google.code.gson:gson:2.2.4"
  testRuntime "com.mojang:authlib:1.5.21"
  testRuntime "com.mojang:realms:1.7.39"
  testRuntime "org.apache.commons:commons-compress:1.8.1"
  testRuntime "org.apache.httpcomponents:httpclient:4.3.3"
  testRuntime "commons-logging:commons-logging:1.1.3"
  testRuntime "org.apache.httpcomponents:httpcore:4.3.2"
  testRuntime "org.apache.logging.log4j:log4j-api:2.0-beta9"
  testRuntime "org.apache.logging.log4j:log4j-core:2.0-beta9"
  testRuntime "org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209"
  testRuntime "org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209"
  testRuntime "tv.twitch:twitch:6.5"

    // maven deployment
    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"
}

test {
    systemProperties System.properties
	onOutput {
		descriptor, event -> logger.lifecycle("TESTOUTPUT:" + event.message)
	}
}
compileJava.options.encoding = "utf-8"
compileJava.options.deprecation = true

jar.manifest {
    attributes "Main-Class" : "org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

tasks.assemble.dependsOn sourcesJar

artifacts {
    archives jar
    archives sourcesJar
}

uploadArchives {
    repositories {
        add getProject().repositories.mavenLocal()
    }
    repositories.mavenDeployer {
        configuration = configurations.deployerJars

        if (project.hasProperty("filesmaven")) {
            logger.info('Publishing to files server')
            repository(url: project.filesmaven.url) {
                authentication(userName: project.filesmaven.username, privateKey: project.filesmaven.key)
            }
        } else {
            logger.info('Publishing to repo folder')
            repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
            project {
                name project.archivesBaseName
                packaging 'jar'
                description 'Fernflower from https://github.com/JetBrains/intellij-community as standalone library'
                url 'https://github.com/MinecraftForge/FernFlower'

                scm {
                    url 'https://github.com/MinecraftForge/FernFlower'
                    connection 'scm:git:git://github.com/MinecraftForge/FernFlower.git'
                    developerConnection 'scm:git:git@github.com:MinecraftForge/FernFlower.git'
                }

                issueManagement {
                    system 'github'
                    url 'https://github.com/MinecraftForge/FernFlower/issues'
                }

                licenses {
                    license {
                        name 'Apache License 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
